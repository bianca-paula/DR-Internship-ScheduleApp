CREATE TABLE Role(
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(20) NOT NULL UNIQUE
);


CREATE TABLE User(
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(20) NOT NULL UNIQUE,
    password VARCHAR(20) NOT NULL,
    first_name VARCHAR(30) NOT NULL,
    last_name VARCHAR(20) NOT NULL,
    prefix VARCHAR(10)
);


CREATE TABLE UserRole(
    user_id INT,
    role_id INT,
    FOREIGN KEY (user_id) REFERENCES user(id),
    FOREIGN KEY (role_id) REFERENCES role(id),
    PRIMARY KEY (user_id, role_id)
);


CREATE TABLE `Group`
(
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(10) NOT NULL
);


CREATE TABLE GroupUser(
    user_id INT,
    group_id INT,
    FOREIGN KEY (user_id) REFERENCES user(id),
    FOREIGN KEY (group_id) REFERENCES `group`(id),
    PRIMARY KEY (user_id, group_id)
);


CREATE TABLE Course(
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(25) NOT NULL,
    type ENUM('Lecture', 'Seminary', 'Laboratory') NOT NULL,
    UNIQUE KEY (name, type)
);


CREATE TABLE GroupCourse(
    course_id INT,
    group_id INT,
    FOREIGN KEY (course_id) REFERENCES course(id),
    FOREIGN KEY (group_id) REFERENCES `group`(id),
    PRIMARY KEY (course_id, group_id)
);


CREATE TABLE Room(
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(20) NOT NULL UNIQUE,
    capacity INT NOT NULL CHECK(capacity >= 0)
);


CREATE TABLE ScheduledCourse(
    id INT AUTO_INCREMENT PRIMARY KEY,
    room_id INT NOT NULL,
    course_id INT NOT NULL,
    from_date DATETIME NOT NULL,
    until_date DATETIME NOT NULL,
    FOREIGN KEY (course_id) REFERENCES course(id),
    FOREIGN KEY (room_id) REFERENCES room(id)
);


CREATE TABLE CourseAttendance(
    user_id INT,
    scheduled_course_id INT,
    PRIMARY KEY(user_id, scheduled_course_id)
);